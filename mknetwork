#!/bin/sh

##########################################
# This script takes an OSM xml data file
# and processes it so it can be used with
# this project. The bulk of the processing
# is handled by spatialite_osm_net. The
# remainder is reprojecting the data into
# crsf used by this project and setting up
# a spatial index on the node data.
##########################################

if [ $1 = '--help' ] || [ $1 = '-h' ] || [ -z $2 ] ; then
    echo 'Usage: mknetwork NETWORK_DATABASE OSM_DATA_FILE'
    exit
fi

OSM_DATA=$2
NETWORK_DB=$1

NETWORK_EDGE_TABLE=network
NETWORK_NODE_TABLE=${NETWORK_EDGE_TABLE}_nodes
EPSG=3857


# Reproject the geometry column of a table to that it is in the same epsg as
# the grocery store databse.
# $reproject_table TABLE_NAME PK_COL_NAME
function reproject_table() {
    SRC_TABLE=$1
    PK_COL=$2

    # geometry column name and type can be recovered from the spatialite database.
    GEOM_COL=$(spatialite $NETWORK_DB <<< 'SELECT f_geometry_column FROM geometry_columns WHERE f_table_name = "'$SRC_TABLE'";')
    GEOM_TYPE=$(spatialite $NETWORK_DB <<< 'SELECT GeometryType('$GEOM_COL') FROM '$SRC_TABLE' LIMIT 1;')

    # SQL script handles updates to the database
    TEMP_TABLE=${SRC_TABLE}_tmp
    spatialite $NETWORK_DB <<EOF
        BEGIN;

        CREATE TABLE $TEMP_TABLE
        AS SELECT *
        FROM $SRC_TABLE;

        UPDATE $TEMP_TABLE SET $GEOM_COL=(
            SELECT ST_Transform($SRC_TABLE.$GEOM_COL, $EPSG)
            FROM $SRC_TABLE
            WHERE $SRC_TABLE.$PK_COL = $TEMP_TABLE.$PK_COL);

        SELECT DiscardGeometryColumn('$SRC_TABLE', '$GEOM_COL');

        DROP TABLE $SRC_TABLE;

        ALTER TABLE $TEMP_TABLE RENAME TO $SRC_TABLE;

        SELECT RecoverGeometryColumn('$SRC_TABLE', '$GEOM_COL', $EPSG, '$GEOM_TYPE');

        COMMIT;

        VACUUM;
EOF
}

# generate initial spatialite database from osm data
spatialite_osm_net -d $NETWORK_DB -o $OSM_DATA --roads -T $NETWORK_EDGE_TABLE

# both network tables are reprojected to the grocery store database epsg.
reproject_table $NETWORK_EDGE_TABLE id
reproject_table $NETWORK_NODE_TABLE node_id

#create indices to optimize some queries
spatialite $NETWORK_DB <<EOF
    SELECT CreateSpatialIndex('$NETWORK_NODE_TABLE', 'geometry');
    CREATE INDEX idx_node_id ON $NETWORK_NODE_TABLE (node_id);
    CREATE INDEX idx_edge_node_to ON $NETWORK_EDGE_TABLE (node_to);
    CREATE INDEX idx_edge_node_from ON $NETWORK_EDGE_TABLE (node_from);
EOF
